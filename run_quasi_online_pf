library(mvnfast)
Napf = N = 100
lag = 10
Time = 100
d = 2
alpha = 0.42
a <- matrix(nrow = d, ncol = d)
for (i in 1:d){
  for (j in 1:d){
    a[i,j] = alpha^(abs(i-j) + 1)
  }
}
ini <- rep(0, d)
b = c = D_ = ini_c = diag(1, nrow = d, ncol = d)
k <- 5
tau <- 0.5
kappa = 0.5
model <- list(ini_mu = ini, ini_cov = ini_c, A = a, B = b, C = c, D = D_, k, tau, kappa)

obs_ <- sample_obs(model, Time)

output <- generate_blocks(lag, Time)
breaks_ <- output[[1]] 
psi_index_ <- output[[2]]

data <- list(obs = obs_, breaks = breaks_, psi_index = psi_index_)

run_quasi_online_pf <- function(model, data, lag, Napf, N){
  breaks <- data$breaks
  output <- run_iAPF(model, data, Napf)
  X <- output[[1]]
  w <- output[[2]]
  psi_pa <- output[[3]]
  ancestors <- output[[5]]
  
  psi_final <- combine_psi(psi_pa, data)
  
  output1 <- run_psi_APF(model, list(obs, breaks[[1]][1], 0, 0), N, psi_final, init = FALSE)
  X <- output1[[1]]
  w <- output1[[2]]
  logZ <- output1[[3]]
  
  return(list(X = X, w = w, logZ = logZ))
}


