library(mvnfast)
library(FKF)
Napf = N = 100
lag = 10
Time = 100
d = 2
alpha = 0.42
a <- matrix(nrow = d, ncol = d)
for (i in 1:d){
  for (j in 1:d){
    a[i,j] = alpha^(abs(i-j) + 1)
  }
}
ini <- rep(0, d)
b = c = D_ = ini_c = diag(1, nrow = d, ncol = d)
k_ <- 5
tau_ <- 0.5
kappa_ = 0.5
dt_ <- ct_ <- matrix(0, d, 1)
Tt_ <- a
P0_ <- Zt_ <- Ht_ <- Gt_ <- diag(1, d, d)
a0_ <- rep(0, d)
model <- list(ini_mu = ini, ini_cov = ini_c, A = a, B = b, C = c, D = D_, k = k_, 
              tau = tau_, kappa = kappa_, dt = dt_, ct = ct_, Tt = Tt_, P0 = P0_, Zt = Zt_, 
              Ht = Ht_, Gt = Gt_, a0 = a0_)

obs_ <- sample_obs(model, Time)

output <- generate_blocks(lag, Time)
breaks_ <- output[[1]] 
psi_index_ <- output[[2]]

data <- list(obs = obs_, breaks = breaks_, psi_index = psi_index_)

run_quasi_online_pf <- function(model, data, lag, Napf, N){
  breaks <- data$breaks
  index <- data$psi_index
  output <- run_iAPF(model, data, Napf)
  #X <- output[[1]]
  #w <- output[[2]]
  psi_pa <- output[[3]]
  ancestors <- output[[5]]
  
  psi_final <- combine_psi(psi_pa, index)
  
  output1 <- smoothing(model, list(obs, breaks[[1]][1], 0, 0), Napf, psi_final, init = FALSE)
  X <- output1[[1]]
  w <- output1[[2]]
  logZ <- output1[[3]]
  
  compute_log_ratio(logZ, model, data)
  
  return(list(X = X, w = w, logZ = logZ))
}


